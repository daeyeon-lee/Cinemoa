'use client';

import Image from 'next/image';
import React, { useState, useCallback, useEffect } from 'react';
import { useRouter } from 'next/navigation';
// ÏÉÅÏòÅÌöå Î™©Î°ù ÏÑπÏÖò
import { RecommendedSection } from './sections/RecommendedSection';
import { ClosingSoonSection } from './sections/ClosingSoonSection';
import { PopularSection } from './sections/PopularSection';
import { RecentlyViewedSection } from './sections/RecentlyViewedSection';
// ÏÉÅÎã®(Î°úÍ≥†+Í≤ÄÏÉâÏ∞Ω+Ïπ¥ÌÖåÍ≥†Î¶¨Î≤ÑÌäº)
import { CategoryButton } from '@/components/buttons/CategoryButton';
import { Input } from '@/components/ui/input';
import { Button } from '@/components/ui/button';
import SearchIcon from '@/component/icon/searchIcon';
import HorizontalScroller from '@/components/containers/HorizontalScroller';
import { HOME_CATEGORIES } from '@/constants/categories';
// Î≤ÑÌäº ÌÅ¥Î¶≠ Ïãú ÎëòÎü¨Î≥¥Í∏∞ ÌéòÏù¥ÏßÄ Ïù¥Îèô
import { navigateToCategory } from '@/utils/categoryNavigation';
import { useHomeRecommended } from '@/hooks/queries/useHomeRecommended';
import { useHomePopular } from '@/hooks/queries/useHomePopular';
import { useHomeClosingSoon } from '@/hooks/queries/useHomeClosingSoon';
import { useHomeRecentlyViewed } from '@/hooks/queries/useHomeRecentlyViewed';
// Ïú†Ï†ÄÏïÑÏù¥Îîî
import { useAuthStore } from '@/stores/authStore';
import type { ApiSearchItem } from '@/types/searchApi';

export default function Home() {
  const router = useRouter();
  const [searchQuery, setSearchQuery] = useState('');

  // Auth StoreÏóêÏÑú ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥ Í∞ÄÏ†∏Ïò§Í∏∞
  const { user } = useAuthStore();

  // üêõ ÎîîÎ≤ÑÍπÖ: Ïª¥Ìè¨ÎÑåÌä∏ÏóêÏÑú authStore ÏÉÅÌÉú ÌôïÏù∏
  useEffect(() => {
    console.log('[DEBUG Home] useAuthStore ÏÉÅÌÉú:', user);
    console.log('[DEBUG Home] authStore Ï†ÑÏ≤¥ ÏÉÅÌÉú:', useAuthStore.getState());
    console.log('[DEBUG Home] Î°úÍ∑∏Ïù∏ Ïó¨Î∂Ä:', user ? 'Î°úÍ∑∏Ïù∏Îê®' : 'ÎπÑÎ°úÍ∑∏Ïù∏');

    // localStorage ÏßÅÏ†ë ÌôïÏù∏
    const storedAuth = localStorage.getItem('auth-storage');
    console.log('[DEBUG Home] localStorage auth-storage:', storedAuth);

    // Ïø†ÌÇ§ ÌôïÏù∏
    console.log('[DEBUG Home] ÌòÑÏû¨ Ïø†ÌÇ§Îì§:', document.cookie);

    // ÏÑ∏ÏÖò Ïø†ÌÇ§ Ï≤¥ÌÅ¨
    const hasSessionCookie = document.cookie.includes('JSESSIONID');
    console.log('[DEBUG Home] JSESSIONID Ïø†ÌÇ§ Ï°¥Ïû¨:', hasSessionCookie);
  }, [user]);

  // React Query ÌõÖÎì§ - authStoreÏóêÏÑú ÏûêÎèôÏúºÎ°ú userId Í∞ÄÏ†∏Ïò¥
  const { data: recommendedItems = [], isLoading: isLoadingRecommended } = useHomeRecommended();
  const { data: popularItems = [], isLoading: isLoadingPopular } = useHomePopular();
  const { data: closingSoonItems = [], isLoading: isLoadingClosingSoon } = useHomeClosingSoon();
  const { data: recentlyViewedData, isLoading: isLoadingRecentlyViewed } = useHomeRecentlyViewed();
  const recentlyViewedItems = recentlyViewedData?.data || [];

  // TODO: Ïã§Ï†ú Ìà¨Ìëú Ïπ¥ÌÖåÍ≥†Î¶¨ Îç∞Ïù¥ÌÑ∞Î°ú ÍµêÏ≤¥ ÌïÑÏöî
  const categories = HOME_CATEGORIES;

  // Í≤ÄÏÉâ Ïã§Ìñâ Ìï∏Îì§Îü¨
  const handleSearch = useCallback(() => {
    if (searchQuery.trim()) {
      router.push(`/search?q=${encodeURIComponent(searchQuery.trim())}`);
    }
  }, [searchQuery, router]);

  // ÏóîÌÑ∞ÌÇ§ Ìï∏Îì§Îü¨
  const handleKeyDown = useCallback(
    (e: React.KeyboardEvent) => {
      if (e.key === 'Enter') {
        handleSearch();
      }
    },
    [handleSearch],
  );

  // Ïπ¥Îìú ÌÅ¥Î¶≠ Ìï∏Îì§Îü¨ - ÏÉÅÏÑ∏ÌéòÏù¥ÏßÄÎ°ú Ïù¥Îèô
  const handleCardClick = useCallback(
    (fundingId: number) => {
      router.push(`/detail/${fundingId}`);
    },
    [router],
  );

  return (
    <div className="w-full px-5">
      <main className="gap-5">
        {/* Desktop: Î°úÍ≥†+Í≤ÄÏÉâ+Ïπ¥ÌÖåÍ≥†Î¶¨ - Full Width */}
        <div className="hidden sm:block py-8">
          <div className="flex flex-col items-center gap-8 w-full">
            <Image src="/cinemoa_logo_long.png" alt="Ïî®ÎÑ§Î™®ÏïÑ Î°úÍ≥†" width={196} height={40} priority />

            <div className="flex flex-col items-center gap-3 w-full">
              {/* Í≤ÄÏÉâÏñ¥ ÏûÖÎ†• */}
              <div className="w-[588px] relative">
                <Input
                  placeholder="Î≥¥Í≥†Ïã∂ÏùÄ ÏÉÅÏòÅÎ¨ºÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî."
                  value={searchQuery}
                  onChange={(e) => setSearchQuery(e.target.value)}
                  onKeyDown={handleKeyDown}
                  className="w-full h-14 pl-8 pr-16 !text-lg !text-primary placeholder:!text-lg placeholder:!text-subtle"
                />
                <Button variant="ghost" className="absolute right-2 top-1/2 -translate-y-1/2 h-10 w-10 p-0 hover:bg-BG-0" onClick={handleSearch}>
                  <SearchIcon width={24} height={24} stroke="#cbd5e1" />
                </Button>
              </div>
              {/* Ïπ¥ÌÖåÍ≥†Î¶¨ Î≤ÑÌäºÎì§ */}
              <div className="flex flex-wrap justify-center gap-1">
                {categories.map((category) => (
                  <CategoryButton
                    key={category.value}
                    icon={category.icon}
                    categoryValue={category.value}
                    page="home"
                    uniformWidth={true}
                    onClick={() => navigateToCategory({ categoryId: category.categoryId ?? undefined })}
                  >
                    {category.label}
                  </CategoryButton>
                ))}
              </div>
            </div>
          </div>
        </div>

        {/* Mobile: Ïπ¥ÌÖåÍ≥†Î¶¨ Î≤ÑÌäº ÏÉÅÎã® Î∞∞Ïπò */}
        <div className="sm:hidden py-4 flex justify-center">
          <HorizontalScroller>
            <div className="flex gap-1">
              {categories.map((category) => (
                <CategoryButton
                  key={category.value}
                  icon={category.icon}
                  categoryValue={category.value}
                  page="home"
                  uniformWidth={true}
                  onClick={() => navigateToCategory({ categoryId: category.categoryId ?? undefined })}
                >
                  {category.label}
                </CategoryButton>
              ))}
            </div>
          </HorizontalScroller>
        </div>

        {/* Desktop Layout - Ïõπ Î≤ÑÏ†Ñ */}
        <div className="hidden sm:block">
          <div className="w-full flex flex-col lg:flex-row gap-4 lg:gap-8">
            {/* Left Column - Recommended (2/3) */}
            <div className="flex-1 lg:w-2/3">
              <RecommendedSection title="Ï∂îÏ≤ú ÏÉÅÏòÅÌöå" items={recommendedItems} loading={isLoadingRecommended} onCardClick={handleCardClick} />
            </div>

            {/* Right Column - Popular (1/3) */}
            <aside className="lg:w-1/3 h-fit">
              <PopularSection title="Ïù∏Í∏∞ ÏÉÅÏòÅÌöå" items={popularItems} loading={isLoadingPopular} onCardClick={handleCardClick} />
            </aside>
          </div>

          {/* Closing Soon - Full Width */}
          <div className="mt-12">
            <ClosingSoonSection title="Ï¢ÖÎ£å ÏûÑÎ∞ï ÏÉÅÏòÅÌöå" items={closingSoonItems} loading={isLoadingClosingSoon} onMoreClick={() => console.log('Ï¢ÖÎ£å ÏûÑÎ∞ï ÎçîÎ≥¥Í∏∞')} onCardClick={handleCardClick} />
          </div>
          <div className="mt-12">
            <RecentlyViewedSection title="ÏµúÍ∑º Î≥∏ ÏÉÅÏòÅÌöå" items={recentlyViewedItems} loading={isLoadingRecentlyViewed} onCardClick={handleCardClick} />
          </div>
        </div>

        {/* Mobile Layout - Î™®Î∞îÏùº Î≤ÑÏ†Ñ ÏÑ∏Î°ú Ïä§ÌÉù */}
        <div className="sm:hidden space-y-8">
          <RecommendedSection title="Ï∂îÏ≤ú ÏÉÅÏòÅÌöå" items={recommendedItems} loading={isLoadingRecommended} onCardClick={handleCardClick} />
          <PopularSection title="Ïù∏Í∏∞ ÏÉÅÏòÅÌöå" items={popularItems} loading={isLoadingPopular} onCardClick={handleCardClick} />
          <ClosingSoonSection title="Ï¢ÖÎ£å ÏûÑÎ∞ï ÏÉÅÏòÅÌöå" items={closingSoonItems} loading={isLoadingClosingSoon} onMoreClick={() => console.log('Ï¢ÖÎ£å ÏûÑÎ∞ï ÎçîÎ≥¥Í∏∞')} onCardClick={handleCardClick} />
          <RecentlyViewedSection title="ÏµúÍ∑º Î≥∏ ÏÉÅÏòÅÌöå" items={recentlyViewedItems} loading={isLoadingRecentlyViewed} onCardClick={handleCardClick} />
        </div>
      </main>
    </div>
  );
}
